<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dimitraz.github.io</title>
    <link>https://dimitraz.github.io/blog/</link>
    <description>Recent content on dimitraz.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Jul 2017 13:16:04 +0100</lastBuildDate>
    
	<atom:link href="https://dimitraz.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker for Mac networking</title>
      <link>https://dimitraz.github.io/blog/post/docker-networking/</link>
      <pubDate>Wed, 19 Jul 2017 13:16:04 +0100</pubDate>
      
      <guid>https://dimitraz.github.io/blog/post/docker-networking/</guid>
      <description>When Google Summer of Code first began, one of our first tasks was describing the steps for the required Kafka-Zookeeper setup. The most straightforward and uncomplicated solution was running the UPS locally, while Zookeeper and the Kafka broker would run in two separate Docker containers.
From the very beginning I ran into loads of issues. Producers and consumers could be started easily from within the containers and communicate between themselves at that level.</description>
    </item>
    
    <item>
      <title>The evaluation phase</title>
      <link>https://dimitraz.github.io/blog/post/welcome/</link>
      <pubDate>Sat, 10 Jun 2017 14:16:04 +0100</pubDate>
      
      <guid>https://dimitraz.github.io/blog/post/welcome/</guid>
      <description>It&amp;rsquo;s been four weeks since Google Summer of Code officially started, four weeks in which I&amp;rsquo;ve worked alongside fellow gsocer Polina to integrate the first Kafka producers and consumers in the UnifiedPush Server code base. It has been a pretty good feeling and something I never really imagined I&amp;rsquo;d have the opportunity to work on, but I really couldn&amp;rsquo;t have asked for a better project.
So far, we&amp;rsquo;ve
 Set up the main working environment using Docker containers for Zookeeper and the Kafka Broker - not without a few headaches, but more on this soon.</description>
    </item>
    
  </channel>
</rss>